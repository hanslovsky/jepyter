name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  Build-Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install jep
      - name: Build Jepyter and execute unit tests
        run: |
          PYTHONHOME=$(dirname $(dirname $(which python)))
          PYTHONHOME=$PYTHONHOME ./gradlew clean build test
      - name: Extract version and add to environment if release
        run: |
          JEPYTER_VERSION=$(./gradlew properties | grep 'version:' | sed 's/version: //')
          echo JEPYTER_VERSION=$JEPYTER_VERSION
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9](-SNAPSHOT)?$ ]]; then
              echo JEPYTER_VERSION=$JEPYTER_VERSION >> $GITHUB_ENV
          else
              echo JEPYTER_VERSION='' >> $GITHUB_ENV
          fi
      - name: Make release tag if on main and non-SNAPSHOT version
        uses: actions/github-script@v3
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && env.JEPYTER_VERSION != '' }}
        with:
          github-token: ${{ github.token }}
          script: |
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/jepyter-{{ env.JEPYTER_VERSION}}",
              sha: context.sha
            })
