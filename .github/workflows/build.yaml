name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  Build-Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: .github/workflows/prepare-python.sh
      - name: Build and execute unit tests
        run: ./gradlew clean build test
      - run: echo "üçè This job's status is ${{ job.status }}."
        if: ${{ always() }}

  Create-Release:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "IS_BUMP_COMMIT=1" >> "$GITHUB_ENV"
        if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'Bump to next development cycle') }}
      - name: Check out code
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
      - run: "git checkout 'HEAD^'"
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
      - name: Define project environment variables
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        run: .github/workflows/define-project-environment-variables.sh
      - run: echo RELEASE_TAG="$PROJECT_NAME-$PROJECT_VERSION" >> "$GITHUB_ENV"
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
      - name: Set up JDK 8
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Set up Python 3.9
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Python dependencies
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        run: .github/workflows/prepare-python.sh
      - name: Build and execute unit tests
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        run: ./gradlew clean build test publishToMavenLocal
      - name: Create library definition with current project version
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        run: .github/workflows/replace-jepyter-version-in-jep.json.sh
      - name: Create Release
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Jepyter ${{ env.PROJECT_VERSION }}
          draft: false
          prerelease: false
      - name: Upload jar
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATH }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/java-archive
      - name: Upload module json
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.MODULE_PATH }}
          asset_name: ${{ env.MODULE_NAME }}
          asset_content_type: text/plain
      - name: Upload pom
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.POM_PATH }}
          asset_name: ${{ env.POM_NAME }}
          asset_content_type: application/xml
      - name: Upload jep.json
        if: ${{ env.IS_BUMP_COMMIT == 1 }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: jep-release.json
          asset_name: jep.json
          asset_content_type: application/json
      - run: echo "üçè This job's status is ${{ job.status }}."
        if: ${{ always() }}
