name: Release
on:
  push:
    tags:
      - jepyter-*
jobs:
  Build-Ubuntu:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out code
        uses: actions/checkout@v2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: "8"
          distribution: "adopt"
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install jep
      - name: Build Jepyter and execute unit tests
        run: |
          PYTHONHOME=$(dirname $(dirname $(which python)))
          PYTHONHOME=$PYTHONHOME ./gradlew clean build test
      - name: Get artifact name
        run: |
          ARTIFACT_PATH=$(ls build/libs/*.jar | head -n 1)
          ARTIFACT_NAME=$(basename $ARTIFACT_PATH)
          echo ARTIFACT_NAME=${ARTIFACT_NAME} >> $GITHUB_ENV
          echo ARTIFACT_PATH=${ARTIFACT_PATH} >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Jepyter ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATH }}
          asset_name: ${{ env.ARTIFACT_NAME }}
          asset_content_type: application/java-archive
      - run: echo "üçè This job's status is ${{ job.status }}."
